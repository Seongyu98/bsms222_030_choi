low<-murder_rate<1
murders$state[low]
which(murders$state==murder_rate<1)
which(murder_rate<1)
ind<-which(murder_rate<1)
murders$state[ind]
ind<-which(murder_rate<1)
murders$state[ind]
Northeast<-murders$region==Northeast
View(murders)
Northeast<-murders$region=="Northeast"
safe<-murder_rate<1
ind<-safe&Northeast
murders$state[ind]
ind<-murder_rate<1
states<-murders$state[ind]
num(states)
ind<-murder_rate<1
states<-murders$state[ind]
num
ind<-murder_rate<1
states<-murders$state[ind]
num<-states
num
ind<-murder_rate<1
states<-murders$state[ind]
length(states)
mean(murder_rate)
ind<-mean(murder_rate)
states<-murder_rate<ind
ave<-murders$state[states]
length(ave)
ind<-match(c('AK', 'MI','IA'),murders$abb)
murders$state[ind]
Which(murders$abb%in%c('MA', 'ME', 'MI', 'MO', 'MU'))
Which(murders$abb %in% c('MA', 'ME', 'MI', 'MO', 'MU'))
c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
which(TRUE)
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
index[ind]
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
num
ind<-which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
num<-ind
num
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
num<-ind
num
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
num<-ind
names(TRUE)
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
num<-ind
num
names(TRUE)
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
num<-ind
names((num(TRUE))
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
true<-which(ind==TRUE)
murders$abb[true]
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
true<-which(ind==TRUE)
murders$abb[true]
c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
t<-ind=TRUE
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
k<-ind=TRUE
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
k<-ind=TRUE
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
TRUE&ind
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
which(TRUE&ind)
which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
ind<-which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
num<-table(ind)
num
which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
num<-table(ind)
num
which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
num<-table(which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb))
num
which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
num<-table(which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb))
num[TRUE]
num[FALSE]
which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
num[TRUE]
num[FALSE]
which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
num<-table(ind)
num[TRUE]
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
abb<-num[TRUE]
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
abb<-num[TRUE]
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
num<-table(ind)
abb<-num[TRUE]
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
num<-table(ind)
abb<-num[TRUE]
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
num[TRUE]
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
num
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
abb<-num
names('abb')
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
abb<-num
names(abb)
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
num
ind<-!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
which(TRUE&!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
which(!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb)
which(TRUE)
!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
which(TRUE)
!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
abb<-which(TRUE)
names(abb)
!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
ind<-which(TRUE)
names(ind)
!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
which(TRUE)
library(dslabs)
data(murders)
population_in_millions <- murders$population/10^6
total_gun_murders <- murders$total
plot(population_in_millions, total_gun_murders)
library(dslabs)
data(murders)
population_in_millions <- murders$population/log(10^6,10)
total_gun_murders <- murders$total=<5
library(dslabs)
data(murders)
population_in_millions <- murders$population/log(10^6,10)
total_gun_murders <- murders$total
plot(population_in_millions, total_gun_murders
library(dslabs)
data(murders)
population_in_millions <- murders$population/log(10^6,10)
total_gun_murders <- murders$total
plot(population_in_millions, total_gun_murders)
x<-with(murders,total/poulation*100000)
View(murders)
x<-with(murders,total/population*100000)
hist(x)
murders$rate <- with(murders, total / population * 100000)
boxplot(rate~region, data = murders)
x<=5*10^6
y<-log10(murders$total)
plot(x,y)
x<=5*10^6
y<-log10(murders$total)
plot(x,y)
?Comparison
x<=5*10^6
y<-log10(murders$total)
plot(x,y)
x<-with(murders,total/population*100000)
hist(x)
murders$rate <- with(murders, total / population * 100000)
boxplot(rate~region, data = murders)
x<-with(murders,total/population*100000)
hist(x)
a <- 1
b <- 1
c <- -1
a
print(a)
ls()
(-b + sqrt(b^2 - 4*a*c) ) / ( 2*a )
(-b - sqrt(b^2 - 4*a*c) ) / ( 2*a )
log(8)
log(a)
help("log")
?log
args(log)
log(8, base = 2)
log(x = 8, base = 2)
log(8,2)
log(base = 2, x = 8)
2 ^ 3
help("+")
?"+"
help(">")
?">"
data()
co2
pi
Inf+1
solution_1 <- (-b + sqrt(b^2 - 4*a*c)) / (2*a)
solution_2 <- (-b - sqrt(b^2 - 4*a*c)) / (2*a)
a <- 3
b <- 2
c <- -1
(-b + sqrt(b^2 - 4*a*c)) / (2*a)
(-b - sqrt(b^2 - 4*a*c)) / (2*a)
a <- 3
b <- 2
c <- -1
(-b + sqrt(b^2 - 4*a*c)) / (2*a)
(-b - sqrt(b^2 - 4*a*c)) / (2*a)
n<-100
n*(n+1)/2
n<-1000
n*(n+1)/2
n <- 1000
x <- seq(1, n)
sum(x)
#c
sqrt(4)
sqrt(100)
x<-10
log(exp(x))
#c
a <- 2
class(a)
library(dslabs)
data(murders)
class(murders)
str(murders)
head(murders)
a <- 1
b <- 1
c <- -1
a
print(a)
ls()
(-b + sqrt(b^2 - 4*a*c) ) / ( 2*a )
(-b - sqrt(b^2 - 4*a*c) ) / ( 2*a )
log(8)
log(a)
help("log")
?log
args(log)
log(8, base = 2)
log(x = 8, base = 2)
log(8,2)
log(base = 2, x = 8)
2 ^ 3
help("+")
?"+"
help(">")
?">"
data()
co2
pi
Inf+1
solution_1 <- (-b + sqrt(b^2 - 4*a*c)) / (2*a)
solution_2 <- (-b - sqrt(b^2 - 4*a*c)) / (2*a)
a <- 3
b <- 2
c <- -1
(-b + sqrt(b^2 - 4*a*c)) / (2*a)
(-b - sqrt(b^2 - 4*a*c)) / (2*a)
a <- 3
b <- 2
c <- -1
(-b + sqrt(b^2 - 4*a*c)) / (2*a)
(-b - sqrt(b^2 - 4*a*c)) / (2*a)
n<-100
n*(n+1)/2
n<-1000
n*(n+1)/2
n <- 1000
x <- seq(1, n)
sum(x)
#c
sqrt(4)
sqrt(100)
x<-10
log(exp(x))
#c
a <- 2
class(a)
library(dslabs)
data(murders)
class(murders)
str(murders)
head(murders)
match(c("New York", "Florida", "Texas"), murders$state)
which(murders$state%in%c("New York", "Florida", "Texas"))
help("log")
?log
args(log)
data()
co2
solution_1 <- (-b + sqrt(b^2 - 4*a*c)) / (2*a)
solution_2 <- (-b - sqrt(b^2 - 4*a*c)) / (2*a)
a <- 3
b <- 2
c <- -1
(-b + sqrt(b^2 - 4*a*c)) / (2*a)
(-b - sqrt(b^2 - 4*a*c)) / (2*a)
library(dslabs)
data(murders)
x <- 1:5
y <- as.character(x)
y
as.numeric(y)
x
class(x)
x <- c(1, "canada", 3)
codes["canada"]
codes[1:2]
codes[c(1,3)]
codes[2]
class(seq(1, 10, 0.5))
seq(1, 10)
seq(1, 10, 2)
1:10
class(1:10)
class(seq(1, 10, 0.5))
codes[2]
class(codes)
codes <- c(italy = 380, canada = 124, egypt = 818)
codes
country <- c(italy, canada, egypt)
codes <- c(italy = 380, canada = 124, egypt = 818)
codes
class(codes)
names(codes)
codes <- c("italy" = 380, "canada" = 124, "egypt" = 818)
codes
codes <- c(380, 124, 818)
country <- c("italy","canada","egypt")
names(codes) <- country
codes
seq(1, 10)
codes[2]
codes[c(1,3)]
codes[1:2]
codes["canada"]
codes[c("egypt","italy")]
x <- c(1, "canada", 3)
x
class(x)
x <- 1:5
y <- as.character(x)
y
as.numeric(y)
x <- c("1", "b", "3")
as.numeric(x)
temp<-c(35,88,42,84,81,30)
city<-c('Beijing', 'Lagos', 'Paris', 'Rio de Janeiro', 'San Juan', 'Toronto')
codes<-c(35,88,42,84,81,30)
city<-c('Beijing', 'Lagos', 'Paris', 'Rio de Janeiro', 'San Juan', 'Toronto')
names(codes)<-city
codes
codes[1:3]
codes[c(3,5)]
seq(12,73)
seq(1,100,2)
length(seq(6,55,4/7))
a<-seq(1,10,0.5)
class(a)
a<-seq(1,10)
class(a)
class(a<-1L)
x <- c("1", "3", "5")
class(x)
class(x<-2L)
library(dslabs)
data(murders)
sort(murders$total)
x <- c(31, 4, 15, 92, 65)
sort(x)
index <- order(x)
x[index]
x
order(x)
murders$state[1:6]
murders$abb[1:6]
ind <- order(murders$total)
murders$abb[ind]
max(murders$total)
i_max <- which.max(murders$total)
murders$state[i_max]
x <- c(31, 4, 15, 92, 65)
rank(x)
x <- c(1, 2, 3)
y <- c(10, 20, 30, 40, 50, 60, 70)
x+y
a <- 1
b <- 1
c <- -1
a <- 1
b <- 1
c <- -1
pop<-murders$population
sort(pop)
min(pop)
index<-order(murders$population)
murders$population[index]
min(murders$population)
which.min(murders$population)
pop<-murders$population
states<-murders$state
names(pop)<-states
which.min(murders$population)
temp <- c(35, 88, 42, 84, 81, 30)
city <- c("Beijing", "Lagos", "Paris", "Rio de Janeiro",
"San Juan", "Toronto")
city_temps <- data.frame(name = city, temperature = temp)
data("na_example")
str(na_example)
ind<-order(murders$population)
murders$state[index]
mean(na_example)
ind<-is.na(na_example)
num<-table(ind)
num
ind<-!is.na(na_example)
num<-table(ind)
num
library(dslabs)
data("murders")
murders$state[which.max(murders$population)]
inches <- c(69, 62, 66, 70, 70, 73, 67, 73, 67, 70)
inches * 2.54
inches - 69
murder_rate <- murders$total / murders$population * 100000
murders$abb[order(murder_rate)]
temp <- c(35, 88, 42, 84, 81, 30)
city <- c("Beijing", "Lagos", "Paris", "Rio de Janeiro",
"San Juan", "Toronto")
city_temps <- data.frame(name = city, temperature = temp)
temp <- c(35, 88, 42, 84, 81, 30)
Celsius<-5/9*(temp-32)
city <- c("Beijing", "Lagos", "Paris", "Rio de Janeiro",
"San Juan", "Toronto")
city_temps <- data.frame(name = city, temperature = Celsius)
pi^2/6
n<-seq(1,100)
sum(1/n^2)
murder_rate<-murders$total/murders$population*100000
mean(murder_rate)
library(dslabs)
data("murders")
murder_rate <- murders$total / murders$population * 100000
ind <- murder_rate < 0.71
ind <- murder_rate <= 0.71
murders$state[ind]
sum(ind)
TRUE & TRUE
TRUE & FALSE
FALSE & FALSE
west <- murders$region == "West"
safe <- murder_rate <= 1
ind <- which(murders$state == "California")
murder_rate[ind]
ind <- match(c("New York", "Florida", "Texas"), murders$state)
ind
murder_rate[ind]
c("Boston", "Dakota", "Washington") %in% murders$state
library(dslabs)
data(murders)
murder_rate<-murders$total/murders$population*100000
low<-murder_rate<1
murders$state[low]
ind<-which(murder_rate<1)
murders$state[ind]
#"Hawaii"   "Idaho" "Iowa"  "Maine" "Minnesota"  "New Hampshire" "North Dakota"  "Oregon" "South Dakota"  "Utah" "Vermont"  "Wyoming"
Northeast<-murders$region=="Northeast"
safe<-murder_rate<1
ind<-safe&Northeast
murders$state[ind]
ind<-mean(murder_rate)
states<-murder_rate<ind
ave<-murders$state[states]
length(ave)
ind<-match(c('AK', 'MI','IA'),murders$abb)
murders$state[ind]
c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
!c('MA', 'ME', 'MI', 'MO', 'MU')%in%murders$abb
which(TRUE)
x <- murders$population / 10^6
y <- murders$total
plot(x, y)
with(murders, plot(population, total))
murders$state[which.max(x)]
murders$rate <- with(murders, total / population * 100000)
boxplot(rate~region, data = murders)
x <- matrix(1:120, 12, 10)
image(x)
murders$state[which.max(x)]
x <- with(murders, total / population * 100000)
hist(x)
murders$state[which.max(x)]
murders$rate <- with(murders, total / population * 100000)
boxplot(rate~region, data = murders)
